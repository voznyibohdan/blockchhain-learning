import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { ChangeEvent, useState } from 'react';
import { Propose } from '@/components/propose';
import { Queue } from '@/components/queue';
export default function Home() {
	const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] = useState(false);
	const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

	const closeAll = () => {
		setIsNetworkSwitchHighlighted(false);
		setIsConnectHighlighted(false);
	};

	const [propose, setPropose] = useState({value: 0, description: ''});
	const [isProposeValid, setIsProposeValid] = useState(false);
	const [showQueue, setShowQueue] = useState(false);

	const handleConfirmProposal = () => {
		setIsProposeValid(true);
	}

	const handleShowQueue = () => {
		setShowQueue(true);
	}

	const handleProposedValue = (event: ChangeEvent<HTMLInputElement>) => {
		setPropose((state) => ({value: parseInt(event.target.value), description: state.description }));
	}

	const handleProposedDescription = (event: ChangeEvent<HTMLInputElement>) => {
		setPropose((state) => ({value: state.value, description: event.target.value }));
	}

	return (
		<>
			<Head>
				<title>WalletConnect | Next Starter Template</title>
				<meta
					name="description"
					content="Generated by create-wc-dapp"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<header>
				<div
					className={styles.backdrop}
					style={{
						opacity:
							isConnectHighlighted || isNetworkSwitchHighlighted
								? 1
								: 0,
					}}
				/>
				<div className={styles.header}>
					<div className={styles.logo}>
						<Image
							src="/logo.svg"
							alt="WalletConnect Logo"
							height="32"
							width="203"
						/>
					</div>
					<div className={styles.buttons}>
						<div
							onClick={closeAll}
							className={`${styles.highlight} ${
								isNetworkSwitchHighlighted
									? styles.highlightSelected
									: ``
							}`}
						>
							<w3m-network-button />
						</div>
						<div
							onClick={closeAll}
							className={`${styles.highlight} ${
								isConnectHighlighted
									? styles.highlightSelected
									: ``
							}`}
						>
							<w3m-button />
						</div>
					</div>
				</div>
			</header>
			<main className={styles.main}>
				<div className={styles.proposeContainer}>
					<label>
						Proposed value
						<input type="number" onChange={handleProposedValue} value={propose.value}/>
					</label>
					<label>
						Propose description
						<input type="text" onChange={handleProposedDescription} value={propose.description} />
					</label>
					<button onClick={handleConfirmProposal}>Create propose</button>
				</div>
				<br/>
				<br/>
				{isProposeValid && <Propose value={propose.value} description={propose.description} />}
				<br/>
				<br/>
				<button onClick={handleShowQueue}>Show queue</button>
				{showQueue && <Queue />}
			</main>
		</>
	);
}
